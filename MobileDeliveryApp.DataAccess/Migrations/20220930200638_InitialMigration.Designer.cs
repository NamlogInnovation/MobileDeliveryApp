// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileDeliveryApp.DataAccess.Database.DatabaseContext;

#nullable disable

namespace MobileDeliveryApp.DataAccess.Migrations
{
    [DbContext(typeof(MobileDeliveryAppDbContext))]
    [Migration("20220930200638_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("MobileDeliveryApp.DataAccess.Database.Tables.WaybillInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("AllowWaybillScan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BillCustID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Courier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Customer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Delivered")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryType")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceSerial")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DriverID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DriverName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endorsement")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndorsementID")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndorsementTypeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FromLocationID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Lat")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Lng")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LoadDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoadID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoadStatus")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoadStatusID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PH")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PL")
                        .HasColumnType("TEXT");

                    b.Property<string>("PODDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PODUserID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PW")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParcelID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrimaryLoadID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScanDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScanID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scanned")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScannedDT")
                        .HasColumnType("TEXT");

                    b.Property<string>("Signature")
                        .HasColumnType("TEXT");

                    b.Property<string>("Signee")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Synchronised")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToBC")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ToLocationID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrackType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrackTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vehicle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WaybillID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WaybillNo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WaybillWeight")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WaybillInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
